@model S.I.A.C.Models.RegistrationViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SelectListItem> rolList = ViewBag.rols;
}

@InputExtensions.Hidden(Html, "order", ViewBag.OrderIdEncrypt)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h2>Nuevo usuario:</h2>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.dni, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.dni, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.dni, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastname, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastname, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.lastname, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pass, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.pass, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.pass, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirmPass, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.confirmPass, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.confirmPass, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.address, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idRol, "Rol ", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("idRol", rolList, "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.idRol, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="col-md-1">
            <button type="submit" class="btn btn-success btn-lg">
                <span class="glyphicon glyphicon-cloud-upload" aria-hidden="true"></span>
                Crear
            </button>
        </div>
        <div class="col-md-3">
            @Html.ActionLink("  Regresar", "Index", "Home", null, new {@class = "btn btn-danger btn-lg glyphicon glyphicon-arrow-left"})
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}