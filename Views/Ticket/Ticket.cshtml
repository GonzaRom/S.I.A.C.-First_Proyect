@using S.I.A.C.Filters
@model S.I.A.C.Models.TicketViewModel

@{
    ViewBag.Title = "Ticket";
    List<SelectListItem> priorities = ViewBag.priorities;
    List<SelectListItem> categories = ViewBag.categories;
    List<SelectListItem> technician = ViewBag.technician;
    List<SelectListItem> clients = ViewBag.clients;

}
<div class="contenedor">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h2>Nuevo Ticket:</h2>
        <div class="form-horizontal">
            <hr/>
            @Html.ValidationSummary(true, "Descripcion del ticket:", new {@class = "text-danger"})

            <div class="form-group">
                @Html.LabelFor(model => model.description, new {@class = "control-label col-md-2", placeholder = "Descripcion..."})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.description, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idPriority, "Urgencia:", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("idPriority", Model.prioritiesList, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.idPriority, "", new {@class = "text-danger"})
                </div>
            </div>
            @Html.Hidden("ticketIdLocal", (string) ViewBag.TicketIdEncrypt)

            @if (AuthorizeViews.IsAuthonized(14))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.idClient, "Cliente:", new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownList("idClient", Model.clientsList, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.idClient, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.idAssignedTechnician, "Tecnico:", new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownList("idAssignedTechnician", Model.technicianList, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.idAssignedTechnician, "", new {@class = "text-danger"})
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.idCategory, "Categoria:", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("idCategory", Model.categoriesList, new {@class = "form-control", placeholder = "Categoria"})
                    @Html.ValidationMessageFor(model => model.idCategory, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-success btn-lg">
                        <span class="glyphicon glyphicon-cloud-upload" aria-hidden="true"></span>
                        Crear
                    </button>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("  Regresar", "Index", "Home", null, new {@class = "btn btn-danger btn-lg glyphicon glyphicon-arrow-left"})
    </div>
</div>